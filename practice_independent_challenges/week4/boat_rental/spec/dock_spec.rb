require './lib/dock'
require './lib/boat'
require './lib/renter'

RSpec.describe Dock do
   describe '#initialize' do
      it 'exists' do
         dock = Dock.new("The Rowing Dock", 3)
         expect(dock).to be_a Dock
      end
      
      it 'has a name' do
         dock = Dock.new("The Rowing Dock", 3)
         expect(dock.name).to eq "The Rowing Dock"
      end

      it 'has a name' do
         dock = Dock.new("The Rowing Dock", 3)
         expect(dock.max_rental_time).to eq 3
      end
   end

   describe '#rent' do
      it 'rent a dock to a renter' do
         dock = Dock.new("The Rowing Dock", 3)
         kayak_1 = Boat.new(:kayak, 20)
         kayak_2 = Boat.new(:kayak, 20)
         sup_1 = Boat.new(:standup_paddle_board, 15)
         patrick = Renter.new("Patrick Star", "4242424242424242")
         eugene = Renter.new("Eugene Crabs", "1313131313131313")

         expect(dock.rent(kayak_1, patrick)).to eq({kayak_1=>patrick})
         expect(dock.rent(kayak_2, patrick)).to eq({kayak_1=>patrick, kayak_2=>patrick})
      end
   end

   describe '#rental_log' do
      it 'returns rental log of boats and renters' do
         dock = Dock.new("The Rowing Dock", 3)
         kayak_1 = Boat.new(:kayak, 20)
         kayak_2 = Boat.new(:kayak, 20)
         sup_1 = Boat.new(:standup_paddle_board, 15)
         patrick = Renter.new("Patrick Star", "4242424242424242")
         eugene = Renter.new("Eugene Crabs", "1313131313131313")

         dock.rent(kayak_1, patrick)
         dock.rent(kayak_2, patrick)
         dock.rent(sup_1, eugene)

         expect(dock.rental_log).to eq({kayak_1=>patrick, kayak_2=>patrick, sup_1=>eugene})
      end
   end

   describe '#charge' do
      it 'charges the renter' do
         dock = Dock.new("The Rowing Dock", 3)
         kayak_1 = Boat.new(:kayak, 20)
         kayak_2 = Boat.new(:kayak, 20)
         sup_1 = Boat.new(:standup_paddle_board, 15)
         patrick = Renter.new("Patrick Star", "4242424242424242")
         eugene = Renter.new("Eugene Crabs", "1313131313131313")

         dock.rent(kayak_1, patrick)
         dock.rent(kayak_2, patrick)
         dock.rent(sup_1, eugene)

         kayak_1.add_hour
         kayak_1.add_hour

         expect(dock.charge(kayak_1)).to eq({card_number: patrick.credit_card_number, amount: 40})

         sup_1.add_hour
         sup_1.add_hour
         sup_1.add_hour
         sup_1.add_hour
         
         expect(dock.charge(sup_1)).to eq({card_number: eugene.credit_card_number, amount: 45})
      end
   end

   describe '#return' do
      it 'return boat rented' do
         dock = Dock.new("The Rowing Dock", 3)
         kayak_1 = Boat.new(:kayak, 20)
         kayak_2 = Boat.new(:kayak, 20)
         sup_1 = Boat.new(:standup_paddle_board, 15)
         patrick = Renter.new("Patrick Star", "4242424242424242")
         eugene = Renter.new("Eugene Crabs", "1313131313131313")

         dock.rent(kayak_1, patrick)
         dock.rent(kayak_2, patrick)
         dock.rent(sup_1, eugene)

         kayak_1.add_hour
         kayak_1.add_hour

         kayak_2.add_hour

         sup_1.add_hour
         sup_1.add_hour
         sup_1.add_hour
         sup_1.add_hour
         
         expect(dock.return(kayak_1)).to eq(patrick)
      end
   end

   describe '#log_hour' do
      it 'adds an hour to all boats currently rented' do
         dock = Dock.new("The Rowing Dock", 3)
         kayak_1 = Boat.new(:kayak, 20)
         kayak_2 = Boat.new(:kayak, 20)
         sup_1 = Boat.new(:standup_paddle_board, 15)
         patrick = Renter.new("Patrick Star", "4242424242424242")
         eugene = Renter.new("Eugene Crabs", "1313131313131313")

         dock.rent(kayak_1, patrick)
         dock.rent(kayak_2, patrick)
         dock.rent(sup_1, eugene)

         expect(dock.log_hour).to eq({kayak_1=>patrick, kayak_2=>patrick, sup_1=>eugene})
      end
   end

   describe '#revenue' do
      it 'return revenue generated by charging boats' do
         dock = Dock.new("The Rowing Dock", 3)
         kayak_1 = Boat.new(:kayak, 20)
         kayak_2 = Boat.new(:kayak, 20)
         sup_1 = Boat.new(:standup_paddle_board, 15)
         patrick = Renter.new("Patrick Star", "4242424242424242")
         eugene = Renter.new("Eugene Crabs", "1313131313131313")

         dock.rent(kayak_1, patrick)
         dock.rent(kayak_2, patrick)
         dock.rent(sup_1, eugene)

         dock.log_hour
         dock.log_hour
         dock.log_hour

         dock.charge(kayak_1)
         dock.charge(kayak_2)
         dock.charge(sup_1)

         dock.return(kayak_1)
         dock.return(kayak_2)
         dock.return(sup_1)

         expect(dock.revenue).to eq(165)
      end
   end
end